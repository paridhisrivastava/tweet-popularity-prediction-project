In randomforestclassifier_fav.py, the training dataset, 'TrainingData.csv' and the testing dataset, 'TestData.csv' are read using the csv package in python, and stored in train_data and test_data arrays respectively. These are then converted to numpy arrays, traindata and testdata using the numpy package in python. The target prediction column, train_target, is formed using the ravel command in numpy package. The not required columns 0-2, and 17-20 are deleted from the traindata. A RandomForest classifier model is formed using traindata, and train_target, using the RandomForestClassifier method of scikit-learn package.

The relative importance of each feature is calculated using the feature_importances_ of the Random Forest model, and plotted, using matplotlib package in python, to get how important is a feature in predicting the popularity of a tweet using favorite based labelling. 

The RandomForest classification model is then applied to the testdata to get the predicted values, pre, which are then compared to the actual values, test_target, to get the Confusion Matrix of the model using the pandas_confusion package in python, and its accuracy is then printed.